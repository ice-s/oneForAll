* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }
  *:before, *:after {
    -webkit-box-sizing: inherit;
            box-sizing: inherit; }

html, body,
p, ol, ul, li, dl, dt, dd, table,
blockquote, figure, fieldset, legend, textarea, pre, iframe, hr,
h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0; }

.navigation .navigation-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

.navigation {
  transition: transform .3s, -webkit-transform .3s;
  color: #444;
  border-bottom: solid 1px #ecf0f1;
  -webkit-transform: translateX(0px);
  transform: translateX(0px);
  width: 100%;
  height: 64px;
  background-color: #1abc9c; }

.navigation .navigation-container > a, .navigation .navigation-menu > li button, .navigation .navigation-menu > li > a {
  color: #fff;
  cursor: pointer;
  font-size: 24px;
  line-height: 34px;
  padding: 15px 20px;
  vertical-align: middle;
  text-shadow: #0d5e4e 0 1px 1px;
  background: 0 0;
  border: none;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none; }

.navigation .navigation-menu, .navigation .navigation-menu > li {
  list-style: none;
  display: inline-block;
  margin: 0;
  padding: 0; }

.navigation a {
  display: inline-block;
  text-decoration: none;
  -webkit-transition: none;
  transition: none; }

.social-likes {
  display: none; }
  .social-likes__widget {
    display: inline-block; }

.center-content {
  transition: transform .3s, -webkit-transform .3s;
  width: 100%; }

.main-menu {
  position: fixed;
  z-index: 1;
  -webkit-transform: translateX(-250px);
  transform: translateX(-250px);
  width: 250px;
  top: 0;
  bottom: 0;
  background-color: #1abc9c;
  opacity: .95;
  color: #fff;
  margin: 0;
  transition: transform .3s, -webkit-transform .3s; }

@media (min-width: 992px) {
    .navigation {
      -webkit-transform: translateX(250px);
      transform: translateX(250px);
      width: calc(100% - 250px);
      background-color: #fff; }
    .navigation .navigation-container > a, .navigation .navigation-menu > li button, .navigation .navigation-menu > li > a {
      color: #444;
      text-shadow: none; }
  .navigation .navigation-brand {
    display: none !important; }
    .social-likes {
      display: inline-block;
      -ms-flex-item-align: start;
      align-self: flex-start;
      -webkit-box-flex: 2;
      -ms-flex-positive: 2;
      flex-grow: 2;
      margin: 15px 15px 10px 54px;
      max-height: 39px;
      overflow: hidden; }
    .center-content {
      margin-left: 250px;
      width: calc(100% - 250px); }
    .main-menu {
      -webkit-transform: translateX(0);
      transform: translateX(0); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZvdW5kYXRpb24vX2Jhc2Uuc2NzcyIsIkxheW91dC9fbmF2aWdhdGlvbi5zY3NzIiwiRm91bmRhdGlvbi9fbWl4aW4uc2NzcyIsIkxheW91dC9fbWFpbi5zY3NzIiwiTGF5b3V0L19zaWRlYmFyLnNjc3MiLCJzdHlsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBc0I7VUFBdEIsdUJBQXNCLEVBS3pCO0VBTkQ7SUFJUSw0QkFBbUI7WUFBbkIsb0JBQW1CLEVBQ3RCOztBQUdMOzs7O0VBSUksVUFBUztFQUNULFdBQVUsRUFDYjs7QUNaRDtFQUNJLHFCQUFvQjtFQUNwQixxQkFBb0I7RUFDcEIsY0FBYTtFQUNiLDBCQUF5QjtFQUN6Qix1QkFBc0I7RUFDdEIsb0JBQW1CLEVBQ3RCOztBQUVEO0VDNElJLGlEQUFnRDtFRDFJaEQsWUFBVztFQUNYLGlDQUFnQztFQUNoQyxtQ0FBa0M7RUFDbEMsMkJBQTBCO0VBQzFCLFlBQVc7RUFDWCxhQUFZO0VBQ1osMEJBQXlCLEVBTzVCOztBQUVEO0VBQ0ksWUFBVztFQUNYLGdCQUFlO0VBQ2YsZ0JBQWU7RUFDZixrQkFBaUI7RUFDakIsbUJBQWtCO0VBQ2xCLHVCQUFzQjtFQUN0QiwrQkFBOEI7RUFDOUIsZ0JBQWU7RUFDZixhQUFZO0VBQ1osaUJBQWdCO0VBQ2hCLHlCQUFnQjtVQUFoQixpQkFBZ0IsRUFLbkI7O0FBRUQ7RUFFUSxpQkFBZ0I7RUFDaEIsc0JBQXFCO0VBQ3JCLFVBQVM7RUFDVCxXQUFVLEVBQ2I7O0FBTkw7RUFTUSxzQkFBcUI7RUFDckIsc0JBQXFCO0VBQ3JCLHlCQUFnQjtFQUFoQixpQkFBZ0IsRUFDbkI7O0FBU0w7RUFDSSxjQUFhLEVBZ0JoQjtFQUhHO0lBQ0ksc0JBQXFCLEVBQ3hCOztBRWpGTDtFRHFKSSxpREFBZ0Q7RUNuSmhELFlBQVcsRUFLZDs7QUNURDtFQUNJLGdCQUFlO0VBQ2YsV0FBVTtFQUNWLHNDQUFxQztFQUNyQyw4QkFBNkI7RUFDN0IsYUFBWTtFQUNaLE9BQU07RUFDTixVQUFTO0VBQ1QsMEJBQXlCO0VBQ3pCLGFBQVk7RUFDWixZQUFXO0VBQ1gsVUFBUztFRjRJVCxpREFBZ0QsRUVwSW5EOztBRkNHO0lEVEo7TUFVUSxxQ0FBb0M7TUFDcEMsNkJBQTRCO01BQzVCLDBCQUF5QjtNQUN6Qix1QkFBc0IsRUFFN0I7SUFFRDtNQWFRLFlBQVc7TUFDWCxrQkFBaUIsRUFFeEI7RUFFRDtJQWdCWSx5QkFBd0IsRUFFL0I7SUFHTDtNQUdRLHNCQUFxQjtNQUNyQiwyQkFBMEI7TUFDMUIsdUJBQXNCO01BQ3RCLG9CQUFtQjtNQUNuQixxQkFBb0I7TUFDcEIsYUFBWTtNQUNaLDRCQUEyQjtNQUMzQixpQkFBZ0I7TUFDaEIsaUJBQWdCLEVBTXZCO0lFbEZEO01BSVEsbUJBQWtCO01BQ2xCLDBCQUF5QixFQUVoQztJQ1REO01BZ0JRLGlDQUFnQztNQUNoQyx5QkFBd0IsRUFFL0IsRUhPQTs7QUlvRkQsazNlQUFrM2UiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cclxuICAgICY6YmVmb3JlLCAmOmFmdGVyIHtcclxuICAgICAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG4gICAgfVxyXG59XHJcblxyXG5odG1sLCBib2R5LFxyXG5wLCBvbCwgdWwsIGxpLCBkbCwgZHQsIGRkLCB0YWJsZSxcclxuYmxvY2txdW90ZSwgZmlndXJlLCBmaWVsZHNldCwgbGVnZW5kLCB0ZXh0YXJlYSwgcHJlLCBpZnJhbWUsIGhyLFxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn0iLCJAaW1wb3J0ICcuLi9Gb3VuZGF0aW9uL21peGluJztcclxuXHJcbi5uYXZpZ2F0aW9uIC5uYXZpZ2F0aW9uLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XHJcbiAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLm5hdmlnYXRpb24ge1xyXG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbjNzO1xyXG4gICAgY29sb3I6ICM0NDQ7XHJcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2VjZjBmMTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDBweCk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHB4KTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFhYmM5YztcclxuICAgIEBpbmNsdWRlIG1lZGlhX3F1ZXJ5X3BjIHtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNTBweCk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI1MHB4KTtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMjUwcHgpO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uIC5uYXZpZ2F0aW9uLWNvbnRhaW5lciA+IGEsIC5uYXZpZ2F0aW9uIC5uYXZpZ2F0aW9uLW1lbnUgPiBsaSBidXR0b24sIC5uYXZpZ2F0aW9uIC5uYXZpZ2F0aW9uLW1lbnUgPiBsaSA+IGEge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzRweDtcclxuICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB0ZXh0LXNoYWRvdzogIzBkNWU0ZSAwIDFweCAxcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAwIDA7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIEBpbmNsdWRlIG1lZGlhX3F1ZXJ5X3BjIHtcclxuICAgICAgICBjb2xvcjogIzQ0NDtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuLm5hdmlnYXRpb24ge1xyXG4gICAgLm5hdmlnYXRpb24tbWVudSwgLm5hdmlnYXRpb24tbWVudSA+IGxpIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgIH1cclxuXHJcbiAgICBhIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdmlnYXRpb24tYnJhbmQge1xyXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhX3F1ZXJ5X3BjIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnNvY2lhbC1saWtlcyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgQGluY2x1ZGUgbWVkaWFfcXVlcnlfcGMge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAtbXMtZmxleC1pdGVtLWFsaWduOiBzdGFydDtcclxuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIC13ZWJraXQtYm94LWZsZXg6IDI7XHJcbiAgICAgICAgLW1zLWZsZXgtcG9zaXRpdmU6IDI7XHJcbiAgICAgICAgZmxleC1ncm93OiAyO1xyXG4gICAgICAgIG1hcmdpbjogMTVweCAxNXB4IDEwcHggNTRweDtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAzOXB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgJl9fd2lkZ2V0IHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcbn0iLCIvL21lZGlhIHF1ZXJ5XHJcbkBtaXhpbiBtZWRpYV9xdWVyeV9tb2JpbGUge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICR2YXItbW9iaWxlKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYV9xdWVyeV9waGFibGV0IHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdmFyLW1vYmlsZSkgYW5kIChtYXgtd2lkdGg6ICR2YXItcGhhYmxldCkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWVkaWFfcXVlcnlfdGFibGV0IHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdmFyLXRhYmxldCkgYW5kIChtYXgtd2lkdGg6ICR2YXItcGMpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1lZGlhX3F1ZXJ5X3BjIHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdmFyLXBjKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYV9xdWVyeV9sZXNzX3RhYmxldCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHZhci10YWJsZXQpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1lZGlhX3F1ZXJ5X21pbl90YWJsZXQge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR2YXItdGFibGV0KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYV9xdWVyeV9tYXhfdGFibGV0IHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdmFyLXBoYWJsZXQpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1lZGlhX3F1ZXJ5X21heF9waGFibGV0IHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkdmFyLXBoYWJsZXQpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1lZGlhX3F1ZXJ5X2xlc3NfbWQtbW9iaWxlIHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkdmFyLW1kLW1vYmlsZSkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vL+OCpOODmeODs+ODiOOAgeS8gealreS4gOimp+ODnOODg+OCr+OCuVxyXG5AbWl4aW4gYm94c2V0KCRib3gtd2lkdGg6IGF1dG8sICRib3gtaGVpZ2h0OiBhdXRvKSB7XHJcbiAgICBib3JkZXI6IDFweCAkY29sb3ItZ3JheS1tb3JlbGlnaHQgc29saWQ7XHJcbiAgICB3aWR0aDogJGJveC13aWR0aDtcclxuICAgIGhlaWdodDogJGJveC1oZWlnaHQ7XHJcbn1cclxuXHJcbkBtaXhpbiBib3hzZXRfX2ltYWdlKCRuYW1lLCAkc2l6ZTpjb3Zlcikge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCN7JGltYWdlLWRpcn0vI3skbmFtZX0pO1xyXG4gICAgQGlmICgkc2l6ZSkge1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogJHNpemU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8v44Kw44Op44OH44O844K344On44OzXHJcbkBtaXhpbiBiZy1ncmFkaWVudCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudChsZWZ0LCAkcmlnaHQtY29sb3IgMCUsICRsZWZ0LWNvbG9yIDEwMCUpOyAvLyBGRjMuNi0xNVxyXG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCwgJHJpZ2h0LWNvbG9yIDAlLCAkbGVmdC1jb2xvciAxMDAlKTsgLy8gQ2hyb21lMTAtMjUsU2FmYXJpNS4xLTZcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJGNvbG9yLWJsdWUtbGlnaHQgMCUsICRjb2xvci1ibHVlLWxpZ2h0IDEwMCUpOyAvLyBXM0MsIElFMTArLCBGRjE2KywgQ2hyb21lMjYrLCBPcGVyYTEyKywgU2FmYXJpNytcclxufVxyXG5cclxuLy9mbGV4Ym9444Gu6Kaq6KaB57SgIOWtkOimgee0oOOBq+OAgG1hcmdpbi1yaWdodDogYXV0bzvjgIDjgpLlhaXjgozjgovjgajlj7Pjgajlt6bjgavopoHntKDjgYzphY3nva7jgafjgY3jgotcclxuQG1peGluIGZsZXgge1xyXG4gICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG59XHJcblxyXG5AbWl4aW4gZmxleC0tMiB7XHJcbiAgICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG59XHJcblxyXG5AbWl4aW4gY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi8v5bem5a+E44GbXHJcbkBtaXhpbiBsZWZ0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLy/lj7Plr4TjgZtcclxuQG1peGluIHJpZ2h0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxufVxyXG5cclxuLy/jg5vjg5Djg7zjgqLjg4vjg6Hjg7zjgrfjg6fjg7NcclxuQG1peGluIGhvdmVyLWFuaW1hdGlvbigkdHJhbnNpdGlvbjogMC4ycywgJG9wYWNpdHk6IDAuNykge1xyXG4gICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XHJcbiAgICBvcGFjaXR5OiAkb3BhY2l0eTtcclxufVxyXG5cclxuLy/jg4fjg5Xjgqnjg6vjg4jjg5zjgr/jg7NcclxuQG1peGluIGJ1dHRvbi1yYWRpdXMge1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkYnV0dG9uLXJhZGl1cztcclxuICAgIC1tb3otYm9yZGVyLXJhZGl1czogJGJ1dHRvbi1yYWRpdXM7XHJcbiAgICAtbXMtYm9yZGVyLXJhZGl1czogJGJ1dHRvbi1yYWRpdXM7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkYnV0dG9uLXJhZGl1cztcclxufVxyXG5cclxuLy/mqKrjgrnjgq/jg63jg7zjg6vjgIDjgZPjga5taXhpbuWtkOimgee0oOOBq2Rpc3BsYXk6aW5saW5lLWJsb2Nr44KS5YWl44KM44KL44Go5qiq44K544Kv44Ot44O844Or5Y+v6IO9XHJcbkBtaXhpbiB4LXNjcm9sbCB7XHJcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuLy9jbGVhcmZpeFxyXG5AbWl4aW4gY2xlYXJmaXgge1xyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWl4aW4gdHJhbnNpdGlvbjNzIHtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MsIC13ZWJraXQtdHJhbnNmb3JtIC4zcztcclxufSIsIkBpbXBvcnQgJy4uL0ZvdW5kYXRpb24vbWl4aW4nO1xyXG5cclxuLmNlbnRlci1jb250ZW50IHtcclxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24zcztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgQGluY2x1ZGUgbWVkaWFfcXVlcnlfcGMge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyNTBweDtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMjUwcHgpO1xyXG4gICAgfVxyXG59IiwiLm1haW4tbWVudSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI1MHB4KTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjUwcHgpO1xyXG4gICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFhYmM5YztcclxuICAgIG9wYWNpdHk6IC45NTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgbWFyZ2luOiAwO1xyXG5cclxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24zcztcclxuXHJcbiAgICBAaW5jbHVkZSBtZWRpYV9xdWVyeV9wYyB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xyXG4gICAgfVxyXG59IiwiKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuaHRtbCwgYm9keSxcbnAsIG9sLCB1bCwgbGksIGRsLCBkdCwgZGQsIHRhYmxlLFxuYmxvY2txdW90ZSwgZmlndXJlLCBmaWVsZHNldCwgbGVnZW5kLCB0ZXh0YXJlYSwgcHJlLCBpZnJhbWUsIGhyLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4ubmF2aWdhdGlvbiAubmF2aWdhdGlvbi1jb250YWluZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm5hdmlnYXRpb24ge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzLCAtd2Via2l0LXRyYW5zZm9ybSAuM3M7XG4gIGNvbG9yOiAjNDQ0O1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2VjZjBmMTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHB4KTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDBweCk7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDY0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxYWJjOWM7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLm5hdmlnYXRpb24ge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjUwcHgpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI1MHB4KTtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNTBweCk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9IH1cblxuLm5hdmlnYXRpb24gLm5hdmlnYXRpb24tY29udGFpbmVyID4gYSwgLm5hdmlnYXRpb24gLm5hdmlnYXRpb24tbWVudSA+IGxpIGJ1dHRvbiwgLm5hdmlnYXRpb24gLm5hdmlnYXRpb24tbWVudSA+IGxpID4gYSB7XG4gIGNvbG9yOiAjZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDM0cHg7XG4gIHBhZGRpbmc6IDE1cHggMjBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC1zaGFkb3c6ICMwZDVlNGUgMCAxcHggMXB4O1xuICBiYWNrZ3JvdW5kOiAwIDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm94LXNoYWRvdzogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAubmF2aWdhdGlvbiAubmF2aWdhdGlvbi1jb250YWluZXIgPiBhLCAubmF2aWdhdGlvbiAubmF2aWdhdGlvbi1tZW51ID4gbGkgYnV0dG9uLCAubmF2aWdhdGlvbiAubmF2aWdhdGlvbi1tZW51ID4gbGkgPiBhIHtcbiAgICAgIGNvbG9yOiAjNDQ0O1xuICAgICAgdGV4dC1zaGFkb3c6IG5vbmU7IH0gfVxuXG4ubmF2aWdhdGlvbiAubmF2aWdhdGlvbi1tZW51LCAubmF2aWdhdGlvbiAubmF2aWdhdGlvbi1tZW51ID4gbGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4ubmF2aWdhdGlvbiBhIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IG5vbmU7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5uYXZpZ2F0aW9uIC5uYXZpZ2F0aW9uLWJyYW5kIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4uc29jaWFsLWxpa2VzIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuc29jaWFsLWxpa2VzIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIC1tcy1mbGV4LWl0ZW0tYWxpZ246IHN0YXJ0O1xuICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgIC13ZWJraXQtYm94LWZsZXg6IDI7XG4gICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMjtcbiAgICAgIGZsZXgtZ3JvdzogMjtcbiAgICAgIG1hcmdpbjogMTVweCAxNXB4IDEwcHggNTRweDtcbiAgICAgIG1heC1oZWlnaHQ6IDM5cHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuOyB9IH1cbiAgLnNvY2lhbC1saWtlc19fd2lkZ2V0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLmNlbnRlci1jb250ZW50IHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcywgLXdlYmtpdC10cmFuc2Zvcm0gLjNzO1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuY2VudGVyLWNvbnRlbnQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDI1MHB4O1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1MHB4KTsgfSB9XG5cbi5tYWluLW1lbnUge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDE7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNTBweCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjUwcHgpO1xuICB3aWR0aDogMjUwcHg7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWFiYzljO1xuICBvcGFjaXR5OiAuOTU7XG4gIGNvbG9yOiAjZmZmO1xuICBtYXJnaW46IDA7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MsIC13ZWJraXQtdHJhbnNmb3JtIC4zczsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAubWFpbi1tZW51IHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9IH1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMzUjViR1V1WTNOeklpd2ljMjkxY21ObGN5STZXeUp6ZEhsc1pTNXpZM056SWl3aVJtOTFibVJoZEdsdmJpOWZibTl5YldGc2FYcGxMbk5qYzNNaUxDSkdiM1Z1WkdGMGFXOXVMMTkyWVhKcFlXSnNaUzV6WTNOeklpd2lSbTkxYm1SaGRHbHZiaTlmYldsNGFXNHVjMk56Y3lJc0lrWnZkVzVrWVhScGIyNHZYMkpoYzJVdWMyTnpjeUlzSWt4aGVXOTFkQzlmWm05dmRHVnlMbk5qYzNNaUxDSk1ZWGx2ZFhRdlgyNWhkbWxuWVhScGIyNHVjMk56Y3lJc0lreGhlVzkxZEM5ZmJXRnBiaTV6WTNOeklpd2lUR0Y1YjNWMEwxOXphV1JsWW1GeUxuTmpjM01pTENKUFltcGxZM1F2VUhKdmFtVmpkQzlmWVhKMGFXTnNaWE11YzJOemN5SmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpBYVcxd2IzSjBJQ2RHYjNWdVpHRjBhVzl1TDE5dWIzSnRZV3hwZW1VdWMyTnpjeWM3WEhKY2JrQnBiWEJ2Y25RZ0owWnZkVzVrWVhScGIyNHZYM1poY21saFlteGxMbk5qYzNNbk8xeHlYRzVBYVcxd2IzSjBJQ2RHYjNWdVpHRjBhVzl1TDE5dGFYaHBiaTV6WTNOekp6dGNjbHh1UUdsdGNHOXlkQ0FuUm05MWJtUmhkR2x2Ymk5ZlltRnpaUzV6WTNOekp6dGNjbHh1WEhKY2JrQnBiWEJ2Y25RZ0oweGhlVzkxZEM5ZlptOXZkR1Z5TG5OamMzTW5PMXh5WEc1QWFXMXdiM0owSUNkTVlYbHZkWFF2WDI1aGRtbG5ZWFJwYjI0dWMyTnpjeWM3WEhKY2JrQnBiWEJ2Y25RZ0oweGhlVzkxZEM5ZmJXRnBiaTV6WTNOekp6dGNjbHh1UUdsdGNHOXlkQ0FuVEdGNWIzVjBMMTl6YVdSbFltRnlMbk5qYzNNbk8xeHlYRzVjY2x4dVFHbHRjRzl5ZENBblQySnFaV04wTDFCeWIycGxZM1F2WDJGeWRHbGpiR1Z6TG5OamMzTW5PMXh5WEc1Y2NseHVMeTlBYVcxd2IzSjBJQ2RQWW1wbFkzUXZWWFJwYkdsMGVTOWZZV3hwWjI0dWMyTnpjeWM3WEhKY2JpOHZRR2x0Y0c5eWRDQW5UMkpxWldOMEwxVjBhV3hwZEhrdlgySnZjbVJsY2k1elkzTnpKenRjY2x4dUx5OUFhVzF3YjNKMElDZFBZbXBsWTNRdlZYUnBiR2wwZVM5ZlkyeGxZWEptYVhndWMyTnpjeWM3WEhKY2JpOHZRR2x0Y0c5eWRDQW5UMkpxWldOMEwxVjBhV3hwZEhrdlgyUnBjM0JzWVhrdWMyTnpjeWM3WEhKY2JpOHZRR2x0Y0c5eWRDQW5UMkpxWldOMEwxVjBhV3hwZEhrdlgyUnNMbk5qYzNNbk8xeHlYRzR2TDBCcGJYQnZjblFnSjA5aWFtVmpkQzlWZEdsc2FYUjVMMTltYkdWNExuTmpjM01uTzF4eVhHNHZMMEJwYlhCdmNuUWdKMDlpYW1WamRDOVZkR2xzYVhSNUwxOXRZWEpuYVc0dWMyTnpjeWM3WEhKY2JpOHZRR2x0Y0c5eWRDQW5UMkpxWldOMEwxVjBhV3hwZEhrdlgyOTJaWEptYkc5M0xuTmpjM01uTzF4eVhHNHZMMEJwYlhCdmNuUWdKMDlpYW1WamRDOVZkR2xzYVhSNUwxOXdZV1JrYVc1bkxuTmpjM01uTzF4eVhHNHZMMEJwYlhCdmNuUWdKMDlpYW1WamRDOVZkR2xzYVhSNUwxOXdiM05wZEdsdmJpNXpZM056Snp0Y2NseHVMeTlBYVcxd2IzSjBJQ2RQWW1wbFkzUXZWWFJwYkdsMGVTOWZjMmw2WlM1elkzTnpKenRjY2x4dUx5OUFhVzF3YjNKMElDZFBZbXBsWTNRdlZYUnBiR2wwZVM5ZmRHRm5Mbk5qYzNNbk8xeHlYRzR2TDBCcGJYQnZjblFnSjA5aWFtVmpkQzlWZEdsc2FYUjVMMTkwWlhoMExuTmpjM01uTzF4eVhHNHZMMEJwYlhCdmNuUWdKMDlpYW1WamRDOVZkR2xzYVhSNUwxOTNhV1IwYUM1elkzTnpKenRjY2x4dUlpd2lJaXdpTHk5bmNtbGs1NVNvNWFTSjVwV3dYSEpjYmlSMllYSXRiVzlpYVd4bE9pQXpNakJ3ZUR0Y2NseHVKSFpoY2kxdFpDMXRiMkpwYkdVNklEUXlOWEI0TzF4eVhHNGtkbUZ5TFhCb1lXSnNaWFE2SURjMk4zQjRPMXh5WEc0a2RtRnlMWFJoWW14bGREb2dOelk0Y0hnN1hISmNiaVIyWVhJdGNHTXRiV2x1T2lBM05qbHdlRHRjY2x4dUpIWmhjaTF3WXpvZ09Ua3ljSGc3WEhKY2JpUjJZWEl0YkdGeVoyVXRjR002SURFeU1qUndlRHRjY2x4dUpIWmhjaTFqYjJ3NklERXlPMXh5WEc0a2RtRnlMVzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNjbHh1SkhaaGNpMWpiMnd0WjNWMGRHVnljem9nTWlVN1hISmNiaVIyWVhJdFkyOXNMWGRwWkhSb09pQWtkbUZ5TFcxaGVDMTNhV1IwYUNBdklDUjJZWEl0WTI5c08xeHlYRzRrZG1GeUxXTnZiQzEzYVdSMGFDMW5kWFIwWlhKek9pQW9KSFpoY2kxdFlYZ3RkMmxrZEdnZ0t5QWtkbUZ5TFdOdmJDMW5kWFIwWlhKektTQXZJQ1IyWVhJdFkyOXNPMXh5WEc1Y2NseHVKR052Ykc5eUxYUmxlSFE2SUNNMFlUUmhOR0VnSVdSbFptRjFiSFE3WEhKY2JpUmpiMnh2Y2kxc2FXNXJPaUFqTkdFNU1HVXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXVkQzF6YVhwbExURXdPaUF4Y21WdE8xeHlYRzRrWm05dWRDMXphWHBsTFRFeE9pQXhMakZ5WlcwN1hISmNiaVJtYjI1MExYTnBlbVV0TVRJNklERXVNbkpsYlR0Y2NseHVKR1p2Ym5RdGMybDZaUzB4TXpvZ01TNHpjbVZ0TzF4eVhHNGtabTl1ZEMxemFYcGxMVEUwT2lBeExqUnlaVzA3WEhKY2JpUm1iMjUwTFhOcGVtVXRNVFU2SURFdU5YSmxiVHRjY2x4dUpHWnZiblF0YzJsNlpTMHhOam9nTVM0MmNtVnRPMXh5WEc0a1ptOXVkQzF6YVhwbExURTRPaUF4TGpoeVpXMDdYSEpjYmlSbWIyNTBMWE5wZW1VdE1qSTZJREl1TW5KbGJUdGNjbHh1SkdadmJuUXRjMmw2WlMweU1Eb2dNbkpsYlR0Y2NseHVKR3hwYm1VdGFHVnBaMmgwTFRJd09pQXljbVZ0TzF4eVhHNGtZMjlzYjNJdGQyaHBkR1U2SUNObVptWm1abVlnSVdSbFptRjFiSFE3WEhKY2JseHlYRzVjY2x4dUpHbHRZV2RsTFdScGNqb2dKeTR1TDJsdFlXZGxjeWM3SUM4dmJXbDRhVzRnWW05NGMyVjBYMTlwYldGblpWeHlYRzRpTENJdkwyMWxaR2xoSUhGMVpYSjVYSEpjYmtCdGFYaHBiaUJ0WldScFlWOXhkV1Z5ZVY5dGIySnBiR1VnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUNSMllYSXRiVzlpYVd4bEtTQjdYSEpjYmlBZ0lDQWdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCdFpXUnBZVjl4ZFdWeWVWOXdhR0ZpYkdWMElIdGNjbHh1SUNBZ0lFQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQWtkbUZ5TFcxdlltbHNaU2tnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJQ1IyWVhJdGNHaGhZbXhsZENrZ2UxeHlYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnYldWa2FXRmZjWFZsY25sZmRHRmliR1YwSUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBa2RtRnlMWFJoWW14bGRDa2dZVzVrSUNodFlYZ3RkMmxrZEdnNklDUjJZWEl0Y0dNcElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUcxbFpHbGhYM0YxWlhKNVgzQmpJSHRjY2x4dUlDQWdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUFrZG1GeUxYQmpLU0I3WEhKY2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNia0J0YVhocGJpQnRaV1JwWVY5eGRXVnllVjlzWlhOelgzUmhZbXhsZENCN1hISmNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pIWmhjaTEwWVdKc1pYUXBJSHRjY2x4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlHMWxaR2xoWDNGMVpYSjVYMjFwYmw5MFlXSnNaWFFnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SUNSMllYSXRkR0ZpYkdWMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCdFpXUnBZVjl4ZFdWeWVWOXRZWGhmZEdGaWJHVjBJSHRjY2x4dUlDQWdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUFrZG1GeUxYQm9ZV0pzWlhRcElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUcxbFpHbGhYM0YxWlhKNVgyMWhlRjl3YUdGaWJHVjBJSHRjY2x4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUFrZG1GeUxYQm9ZV0pzWlhRcElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUcxbFpHbGhYM0YxWlhKNVgyeGxjM05mYldRdGJXOWlhV3hsSUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2RtRnlMVzFrTFcxdlltbHNaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2TCtPQ3BPT0RtZU9EcytPRGlPT0FnZVM4Z2VhbHJlUzRnT2ltcCtPRG5PT0RnK09DcitPQ3VWeHlYRzVBYldsNGFXNGdZbTk0YzJWMEtDUmliM2d0ZDJsa2RHZzZJR0YxZEc4c0lDUmliM2d0YUdWcFoyaDBPaUJoZFhSdktTQjdYSEpjYmlBZ0lDQmliM0prWlhJNklERndlQ0FrWTI5c2IzSXRaM0poZVMxdGIzSmxiR2xuYUhRZ2MyOXNhV1E3WEhKY2JpQWdJQ0IzYVdSMGFEb2dKR0p2ZUMxM2FXUjBhRHRjY2x4dUlDQWdJR2hsYVdkb2REb2dKR0p2ZUMxb1pXbG5hSFE3WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCaWIzaHpaWFJmWDJsdFlXZGxLQ1J1WVcxbExDQWtjMmw2WlRwamIzWmxjaWtnZTF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDTjdKR2x0WVdkbExXUnBjbjB2STNza2JtRnRaWDBwTzF4eVhHNGdJQ0FnUUdsbUlDZ2tjMmw2WlNrZ2UxeHlYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dKSE5wZW1VN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNiaTh2NDRLdzQ0T3A0NE9INDRPODQ0SzM0NE9uNDRPelhISmNia0J0YVhocGJpQmlaeTFuY21Ga2FXVnVkQ0I3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBdGJXOTZMV3hwYm1WaGNpMW5jbUZrYVdWdWRDaHNaV1owTENBa2NtbG5hSFF0WTI5c2IzSWdNQ1VzSUNSc1pXWjBMV052Ykc5eUlERXdNQ1VwT3lBdkx5QkdSak11TmkweE5WeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dMWGRsWW10cGRDMXNhVzVsWVhJdFozSmhaR2xsYm5Rb2JHVm1kQ3dnSkhKcFoyaDBMV052Ykc5eUlEQWxMQ0FrYkdWbWRDMWpiMnh2Y2lBeE1EQWxLVHNnTHk4Z1EyaHliMjFsTVRBdE1qVXNVMkZtWVhKcE5TNHhMVFpjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUd4cGJtVmhjaTFuY21Ga2FXVnVkQ2gwYnlCeWFXZG9kQ3dnSkdOdmJHOXlMV0pzZFdVdGJHbG5hSFFnTUNVc0lDUmpiMnh2Y2kxaWJIVmxMV3hwWjJoMElERXdNQ1VwT3lBdkx5QlhNME1zSUVsRk1UQXJMQ0JHUmpFMkt5d2dRMmh5YjIxbE1qWXJMQ0JQY0dWeVlURXlLeXdnVTJGbVlYSnBOeXRjY2x4dWZWeHlYRzVjY2x4dUx5OW1iR1Y0WW05NDQ0R3U2S2FxNkthQjU3U2dJT1d0a09pbWdlZTBvT09CcStPQWdHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGJ6dmpnSURqZ3BMbGhhWGpnb3pqZ292amdhamxqN1BqZ2FqbHQ2YmpnYXZvcG9IbnRLRGpnWXpwaFkzbnZhN2pnYWZqZ1kzamdvdGNjbHh1UUcxcGVHbHVJR1pzWlhnZ2UxeHlYRzRnSUNBZ0xYZGxZbXRwZEMxaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklDMTNaV0pyYVhRdFpteGxlRHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNBdGQyVmlhMmwwTFdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWm14bGVDMWxibVE3WEhKY2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndFpXNWtPMXh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnWm14bGVDMHRNaUI3WEhKY2JpQWdJQ0F0ZDJWaWEybDBMV0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1pteGxlQzF6ZEdGeWREdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklDMTNaV0pyYVhRdFpteGxlRHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNBdGQyVmlhMmwwTFdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWm14bGVDMWxibVE3WEhKY2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndFpXNWtPMXh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnWTJWdWRHVnlJSHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjY2x4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JuMWNjbHh1WEhKY2JpOHY1YmVtNWErRTQ0R2JYSEpjYmtCdGFYaHBiaUJzWldaMElIdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0JtYkdWNExXWnNiM2M2SUhKdmR5QjNjbUZ3TzF4eVhHNGdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExYTjBZWEowTzF4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVmVnh5WEc1Y2NseHVMeS9sajdQbHI0VGpnWnRjY2x4dVFHMXBlR2x1SUhKcFoyaDBJSHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNCbWJHVjRMV1pzYjNjNklISnZkeUIzY21Gd08xeHlYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCbWJHVjRMV1Z1WkR0Y2NseHVmVnh5WEc1Y2NseHVMeS9qZzV2amc1RGpnN3pqZ3FMamc0dmpnNkhqZzd6amdyZmpnNmZqZzdOY2NseHVRRzFwZUdsdUlHaHZkbVZ5TFdGdWFXMWhkR2x2Ymlna2RISmhibk5wZEdsdmJqb2dNQzR5Y3l3Z0pHOXdZV05wZEhrNklEQXVOeWtnZTF4eVhHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ0pIUnlZVzV6YVhScGIyNDdYSEpjYmlBZ0lDQnZjR0ZqYVhSNU9pQWtiM0JoWTJsMGVUdGNjbHh1ZlZ4eVhHNWNjbHh1THkvamc0ZmpnNVhqZ3Fuamc2dmpnNGpqZzV6amdyL2pnN05jY2x4dVFHMXBlR2x1SUdKMWRIUnZiaTF5WVdScGRYTWdlMXh5WEc0Z0lDQWdMWGRsWW10cGRDMWliM0prWlhJdGNtRmthWFZ6T2lBa1luVjBkRzl1TFhKaFpHbDFjenRjY2x4dUlDQWdJQzF0YjNvdFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKMWRIUnZiaTF5WVdScGRYTTdYSEpjYmlBZ0lDQXRiWE10WW05eVpHVnlMWEpoWkdsMWN6b2dKR0oxZEhSdmJpMXlZV1JwZFhNN1hISmNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUFrWW5WMGRHOXVMWEpoWkdsMWN6dGNjbHh1ZlZ4eVhHNWNjbHh1THkvbXFLcmpncm5qZ3Evamc2M2pnN3pqZzZ2amdJRGpnWlBqZ2E1dGFYaHBidVd0a09pbWdlZTBvT09CcTJScGMzQnNZWGs2YVc1c2FXNWxMV0pzYjJOcjQ0S1M1WVdsNDRLTTQ0S0w0NEdvNXFpcTQ0SzU0NEt2NDRPdDQ0Tzg0NE9yNVkrdjZJTzlYSEpjYmtCdGFYaHBiaUI0TFhOamNtOXNiQ0I3WEhKY2JpQWdJQ0J2ZG1WeVpteHZkeTE0T2lCaGRYUnZPMXh5WEc0Z0lDQWdkMmhwZEdVdGMzQmhZMlU2SUc1dmQzSmhjRHRjY2x4dVhISmNiaUFnSUNBbU9qb3RkMlZpYTJsMExYTmpjbTlzYkdKaGNpQjdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk5amJHVmhjbVpwZUZ4eVhHNUFiV2w0YVc0Z1kyeGxZWEptYVhnZ2UxeHlYRzRnSUNBZ0pqbzZZV1owWlhJZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hISmNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNiaUFnSUNBZ0lDQWdZMnhsWVhJNklHSnZkR2c3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JseHlYRzVBYldsNGFXNGdkSEpoYm5OcGRHbHZiak56SUh0Y2NseHVJQ0FnSUhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXVNM01zSUMxM1pXSnJhWFF0ZEhKaGJuTm1iM0p0SUM0emN6dGNjbHh1ZlNJc0lpb2dlMXh5WEc0Z0lDQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2NseHVYSEpjYmlBZ0lDQW1PbUpsWm05eVpTd2dKanBoWm5SbGNpQjdYSEpjYmlBZ0lDQWdJQ0FnWW05NExYTnBlbWx1WnpvZ2FXNW9aWEpwZER0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVhSFJ0YkN3Z1ltOWtlU3hjY2x4dWNDd2diMndzSUhWc0xDQnNhU3dnWkd3c0lHUjBMQ0JrWkN3Z2RHRmliR1VzWEhKY2JtSnNiMk5yY1hWdmRHVXNJR1pwWjNWeVpTd2dabWxsYkdSelpYUXNJR3hsWjJWdVpDd2dkR1Y0ZEdGeVpXRXNJSEJ5WlN3Z2FXWnlZVzFsTENCb2NpeGNjbHh1YURFc0lHZ3lMQ0JvTXl3Z2FEUXNJR2cxTENCb05pQjdYSEpjYmlBZ0lDQnRZWEpuYVc0NklEQTdYSEpjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh5WEc1OUlpd2lJaXdpUUdsdGNHOXlkQ0FuTGk0dlJtOTFibVJoZEdsdmJpOXRhWGhwYmljN1hISmNibHh5WEc0dWJtRjJhV2RoZEdsdmJpQXVibUYyYVdkaGRHbHZiaTFqYjI1MFlXbHVaWElnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nTFhkbFltdHBkQzFpYjNnN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lBdGJYTXRabXhsZUdKdmVEdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0F0ZDJWaWEybDBMV0p2ZUMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdMVzF6TFdac1pYZ3RZV3hwWjI0NklHTmxiblJsY2p0Y2NseHVJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibjFjY2x4dVhISmNiaTV1WVhacFoyRjBhVzl1SUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUhSeVlXNXphWFJwYjI0emN6dGNjbHh1SUNBZ0lHTnZiRzl5T2lBak5EUTBPMXh5WEc0Z0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ2MyOXNhV1FnTVhCNElDTmxZMll3WmpFN1hISmNiaUFnSUNBdGQyVmlhMmwwTFhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3djSGdwTzF4eVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEQndlQ2s3WEhKY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUdobGFXZG9kRG9nTmpSd2VEdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXhZV0pqT1dNN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCdFpXUnBZVjl4ZFdWeWVWOXdZeUI3WEhKY2JpQWdJQ0FnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29NalV3Y0hncE8xeHlYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NneU5UQndlQ2s3WEhKY2JpQWdJQ0FnSUNBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBdElESTFNSEI0S1R0Y2NseHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHVibUYyYVdkaGRHbHZiaUF1Ym1GMmFXZGhkR2x2YmkxamIyNTBZV2x1WlhJZ1BpQmhMQ0F1Ym1GMmFXZGhkR2x2YmlBdWJtRjJhV2RoZEdsdmJpMXRaVzUxSUQ0Z2JHa2dZblYwZEc5dUxDQXVibUYyYVdkaGRHbHZiaUF1Ym1GMmFXZGhkR2x2YmkxdFpXNTFJRDRnYkdrZ1BpQmhJSHRjY2x4dUlDQWdJR052Ykc5eU9pQWpabVptTzF4eVhHNGdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TkhCNE8xeHlYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJRE0wY0hnN1hISmNiaUFnSUNCd1lXUmthVzVuT2lBeE5YQjRJREl3Y0hnN1hISmNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh5WEc0Z0lDQWdkR1Y0ZEMxemFHRmtiM2M2SUNNd1pEVmxOR1VnTUNBeGNIZ2dNWEI0TzF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ01DQXdPMXh5WEc0Z0lDQWdZbTl5WkdWeU9pQnViMjVsTzF4eVhHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNRHRjY2x4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQnRaV1JwWVY5eGRXVnllVjl3WXlCN1hISmNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDTTBORFE3WEhKY2JpQWdJQ0FnSUNBZ2RHVjRkQzF6YUdGa2IzYzZJRzV2Ym1VN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNiaTV1WVhacFoyRjBhVzl1SUh0Y2NseHVJQ0FnSUM1dVlYWnBaMkYwYVc5dUxXMWxiblVzSUM1dVlYWnBaMkYwYVc5dUxXMWxiblVnUGlCc2FTQjdYSEpjYmlBZ0lDQWdJQ0FnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWVNCN1hISmNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4eVhHNGdJQ0FnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQnViMjVsTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDNXVZWFpwWjJGMGFXOXVMV0p5WVc1a0lIdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0WldScFlWOXhkV1Z5ZVY5d1l5QjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVVnSVdsdGNHOXlkR0Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYmk1emIyTnBZV3d0YkdsclpYTWdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUcxbFpHbGhYM0YxWlhKNVgzQmpJSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnTFcxekxXWnNaWGd0YVhSbGJTMWhiR2xuYmpvZ2MzUmhjblE3WEhKY2JpQWdJQ0FnSUNBZ1lXeHBaMjR0YzJWc1pqb2dabXhsZUMxemRHRnlkRHRjY2x4dUlDQWdJQ0FnSUNBdGQyVmlhMmwwTFdKdmVDMW1iR1Y0T2lBeU8xeHlYRzRnSUNBZ0lDQWdJQzF0Y3kxbWJHVjRMWEJ2YzJsMGFYWmxPaUF5TzF4eVhHNGdJQ0FnSUNBZ0lHWnNaWGd0WjNKdmR6b2dNanRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SURFMWNIZ2dNVFZ3ZUNBeE1IQjRJRFUwY0hnN1hISmNiaUFnSUNBZ0lDQWdiV0Y0TFdobGFXZG9kRG9nTXpsd2VEdGNjbHh1SUNBZ0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNaZlgzZHBaR2RsZENCN1hISmNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4eVhHNGdJQ0FnZlZ4eVhHNTlJaXdpUUdsdGNHOXlkQ0FuTGk0dlJtOTFibVJoZEdsdmJpOXRhWGhwYmljN1hISmNibHh5WEc0dVkyVnVkR1Z5TFdOdmJuUmxiblFnZTF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnZEhKaGJuTnBkR2x2YmpOek8xeHlYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQnRaV1JwWVY5eGRXVnllVjl3WXlCN1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SURJMU1IQjRPMXh5WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnTFNBeU5UQndlQ2s3WEhKY2JpQWdJQ0I5WEhKY2JuMGlMQ0l1YldGcGJpMXRaVzUxSUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjY2x4dUlDQWdJSG90YVc1a1pYZzZJREU3WEhKY2JpQWdJQ0F0ZDJWaWEybDBMWFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE1qVXdjSGdwTzF4eVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMHlOVEJ3ZUNrN1hISmNiaUFnSUNCM2FXUjBhRG9nTWpVd2NIZzdYSEpjYmlBZ0lDQjBiM0E2SURBN1hISmNiaUFnSUNCaWIzUjBiMjA2SURBN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1XRmlZemxqTzF4eVhHNGdJQ0FnYjNCaFkybDBlVG9nTGprMU8xeHlYRzRnSUNBZ1kyOXNiM0k2SUNObVptWTdYSEpjYmlBZ0lDQnRZWEpuYVc0NklEQTdYSEpjYmx4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnZEhKaGJuTnBkR2x2YmpOek8xeHlYRzVjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaFgzRjFaWEo1WDNCaklIdGNjbHh1SUNBZ0lDQWdJQ0F0ZDJWaWEybDBMWFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tUdGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DazdYSEpjYmlBZ0lDQjlYSEpjYm4waUxDSmNjbHh1SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCU1VGQkxFRkJRVUVzUTBGQlF5eERRVUZETzBWQlEwVXNWVUZCVlN4RlFVRkZMRlZCUVZVc1IwRkxla0k3UlVGT1JDeEJRVWRKTEVOQlNFZ3NRVUZIU1N4UFFVRlBMRVZCU0Zvc1EwRkJReXhCUVVkakxFMUJRVTBzUTBGQlF6dEpRVU5rTEZWQlFWVXNSVUZCUlN4UFFVRlBMRWRCUTNSQ096dEJRVWRNTEVGQlFVRXNTVUZCU1N4RlFVRkZMRWxCUVVrN1FVRkRWaXhEUVVGRExFVkJRVVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNTMEZCU3p0QlFVTm9ReXhWUVVGVkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZGQlFWRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFZEJRVWNzUlVGQlJTeE5RVUZOTEVWQlFVVXNSVUZCUlR0QlFVTXZSQ3hGUVVGRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFVkJRVVVzUTBGQlF6dEZRVU51UWl4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxFOUJRVThzUlVGQlJTeERRVUZETEVkQlEySTdPMEZGV2tRc1FVRkJRU3hYUVVGWExFTkJRVU1zY1VKQlFYRkNMRU5CUVVNN1JVRkRPVUlzVDBGQlR5eEZRVUZGTEZkQlFWYzdSVUZEY0VJc1QwRkJUeXhGUVVGRkxGZEJRVmM3UlVGRGNFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhwUWtGQmFVSXNSVUZCUlN4TlFVRk5PMFZCUTNwQ0xHTkJRV01zUlVGQlJTeE5RVUZOTzBWQlEzUkNMRmRCUVZjc1JVRkJSU3hOUVVGTkxFZEJRM1JDT3p0QlFVVkVMRUZCUVVFc1YwRkJWeXhEUVVGRE8wVklORWxTTEZWQlFWVXNSVUZCUlN4dlEwRkJiME03UlVjeFNXaEVMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzWVVGQllTeEZRVUZGTEdsQ1FVRnBRanRGUVVOb1F5eHBRa0ZCYVVJc1JVRkJSU3hsUVVGbE8wVkJRMnhETEZOQlFWTXNSVUZCUlN4bFFVRmxPMFZCUXpGQ0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhuUWtGQlowSXNSVUZCUlN4UFFVRlBMRWRCVHpWQ08wVklUa2NzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxPMGxIVkRWQ0xFRkJRVUVzVjBGQlZ5eERRVUZETzAxQlZVb3NhVUpCUVdsQ0xFVkJRVVVzYVVKQlFXbENPMDFCUTNCRExGTkJRVk1zUlVGQlJTeHBRa0ZCYVVJN1RVRkROVUlzUzBGQlN5eEZRVUZGTEd0Q1FVRnJRanROUVVONlFpeG5Ra0ZCWjBJc1JVRkJSU3hKUVVGSkxFZEJSVGRDT3p0QlFVVkVMRUZCUVVFc1YwRkJWeXhEUVVGRExIRkNRVUZ4UWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hYUVVGWExFTkJRVU1zWjBKQlFXZENMRWRCUVVjc1JVRkJSU3hEUVVGRExFMUJRVTBzUlVGQlJTeFhRVUZYTEVOQlFVTXNaMEpCUVdkQ0xFZEJRVWNzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXp0RlFVTnVTQ3hMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4UFFVRlBPMFZCUTJZc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFhRVUZYTEVWQlFVVXNTVUZCU1R0RlFVTnFRaXhQUVVGUExFVkJRVVVzVTBGQlV6dEZRVU5zUWl4alFVRmpMRVZCUVVVc1RVRkJUVHRGUVVOMFFpeFhRVUZYTEVWQlFVVXNhVUpCUVdsQ08wVkJRemxDTEZWQlFWVXNSVUZCUlN4SFFVRkhPMFZCUTJZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeGhRVUZoTEVWQlFVVXNRMEZCUXp0RlFVTm9RaXhWUVVGVkxFVkJRVVVzU1VGQlNTeEhRVXR1UWp0RlNIaENSeXhOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVczdTVWRSTlVJc1FVRkJRU3hYUVVGWExFTkJRVU1zY1VKQlFYRkNMRWRCUVVjc1EwRkJReXhGUVVGRkxGZEJRVmNzUTBGQlF5eG5Ra0ZCWjBJc1IwRkJSeXhGUVVGRkxFTkJRVU1zVFVGQlRTeEZRVUZGTEZkQlFWY3NRMEZCUXl4blFrRkJaMElzUjBGQlJ5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRPMDFCWVM5SExFdEJRVXNzUlVGQlJTeEpRVUZKTzAxQlExZ3NWMEZCVnl4RlFVRkZMRWxCUVVrc1IwRkZlRUk3TzBGQlJVUXNRVUZEU1N4WFFVUlBMRU5CUTFBc1owSkJRV2RDTEVWQlJIQkNMRmRCUVZjc1EwRkRWeXhuUWtGQlowSXNSMEZCUnl4RlFVRkZMRU5CUVVNN1JVRkRjRU1zVlVGQlZTeEZRVUZGTEVsQlFVazdSVUZEYUVJc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hQUVVGUExFVkJRVVVzUTBGQlF5eEhRVU5pT3p0QlFVNU1MRUZCVVVrc1YwRlNUeXhEUVZGUUxFTkJRVU1zUTBGQlF6dEZRVU5GTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xHVkJRV1VzUlVGQlJTeEpRVUZKTzBWQlEzSkNMRlZCUVZVc1JVRkJSU3hKUVVGSkxFZEJRMjVDT3p0QlNIUkRSQ3hOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVczdSVWN3UWpWQ0xFRkJZMGtzVjBGa1R5eERRV05RTEdsQ1FVRnBRaXhEUVVGRE8wbEJSVllzVDBGQlR5eEZRVUZGTEdWQlFXVXNSMEZGTDBJN08wRkJSMHdzUVVGQlFTeGhRVUZoTEVOQlFVTTdSVUZEVml4UFFVRlBMRVZCUVVVc1NVRkJTU3hIUVdkQ2FFSTdSVWhvUlVjc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTzBsSEswTTFRaXhCUVVGQkxHRkJRV0VzUTBGQlF6dE5RVWRPTEU5QlFVOHNSVUZCUlN4WlFVRlpPMDFCUTNKQ0xHMUNRVUZ0UWl4RlFVRkZMRXRCUVVzN1RVRkRNVUlzVlVGQlZTeEZRVUZGTEZWQlFWVTdUVUZEZEVJc1owSkJRV2RDTEVWQlFVVXNRMEZCUXp0TlFVTnVRaXhwUWtGQmFVSXNSVUZCUlN4RFFVRkRPMDFCUTNCQ0xGTkJRVk1zUlVGQlJTeERRVUZETzAxQlExb3NUVUZCVFN4RlFVRkZMRzFDUVVGdFFqdE5RVU16UWl4VlFVRlZMRVZCUVVVc1NVRkJTVHROUVVOb1FpeFJRVUZSTEVWQlFVVXNUVUZCVFN4SFFVMTJRanRGUVVoSkxFRkJRVVFzY1VKQlFWTXNRMEZCUXp0SlFVTk9MRTlCUVU4c1JVRkJSU3haUVVGWkxFZEJRM2hDT3p0QlEycEdUQ3hCUVVGQkxHVkJRV1VzUTBGQlF6dEZTbkZLV2l4VlFVRlZMRVZCUVVVc2IwTkJRVzlETzBWSmJrcG9SQ3hMUVVGTExFVkJRVVVzU1VGQlNTeEhRVXRrTzBWS1YwY3NUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTE8wbEpiRUkxUWl4QlFVRkJMR1ZCUVdVc1EwRkJRenROUVVsU0xGZEJRVmNzUlVGQlJTeExRVUZMTzAxQlEyeENMRXRCUVVzc1JVRkJSU3hyUWtGQmEwSXNSMEZGYUVNN08wRkRWRVFzUVVGQlFTeFZRVUZWTEVOQlFVTTdSVUZEVUN4UlFVRlJMRVZCUVVVc1MwRkJTenRGUVVObUxFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNhVUpCUVdsQ0xFVkJRVVVzYTBKQlFXdENPMFZCUTNKRExGTkJRVk1zUlVGQlJTeHJRa0ZCYTBJN1JVRkROMElzUzBGQlN5eEZRVUZGTEV0QlFVczdSVUZEV2l4SFFVRkhMRVZCUVVVc1EwRkJRenRGUVVOT0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNaMEpCUVdkQ0xFVkJRVVVzVDBGQlR6dEZRVU42UWl4UFFVRlBMRVZCUVVVc1IwRkJSenRGUVVOYUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRU5CUVVNN1JVdzBTVlFzVlVGQlZTeEZRVUZGTEc5RFFVRnZReXhIUzNCSmJrUTdSVXhEUnl4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXM3U1V0d1FqVkNMRUZCUVVFc1ZVRkJWU3hEUVVGRE8wMUJaMEpJTEdsQ1FVRnBRaXhGUVVGRkxHRkJRV0U3VFVGRGFFTXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkZMMElpZlE9PSAqL1xuIl19 */
